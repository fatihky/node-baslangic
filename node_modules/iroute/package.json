{
  "name": "iroute",
  "version": "0.3.2",
  "main": "index.js",
  "description": "High performance nodejs route with c++",
  "keywords": [
    "route",
    "libuv",
    "asynchronous",
    "non-block"
  ],
  "author": {
    "name": "doublespout",
    "email": "snoopyxdy@163.com"
  },
  "homepage": "https://github.com/DoubleSpout/iroute",
  "bugs": {
    "url": "https://github.com/DoubleSpout/iroute/issues",
    "email": "snoopyxdy@163.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/DoubleSpout/iroute.git"
  },
  "scripts": {
    "install": "node-gyp rebuild",
    "test": "node ./samples/test/main_test.js"
  },
  "os": [
    "macos",
    "linux",
    "darwin",
    "win32"
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "contributors": [
    {
      "name": "//iroute"
    },
    {
      "name": "2013-05-29 double spout",
      "email": "snoopyxdy@163.com"
    }
  ],
  "readme": "# iroute(fast and simple nodejs http/https router module) [![Build Status](https://travis-ci.org/DoubleSpout/iroute.png?branch=master)](https://travis-ci.org/DoubleSpout/iroute)\r\n\r\nif you only want to build a simple http server and don't want to use express,so iroute module could simple and fast to handler the request to action.\r\nthe module are also be used in flat.js framework.\r\n\r\n## Installing the module\r\n\r\nWith [npm](http://npmjs.org/):\r\n\r\niroute module is supported windows, linux, mac.\r\n\r\nMake sure, node-gyp has installed.\r\n\r\n     npm install iroute\r\n\r\nFrom source:\r\n\r\n     git clone https://github.com/DoubleSpout/iroute.git\r\n     cd iroute\r\n     node-gyp rebuild\r\n\r\nTo include the module in your project:\r\n\r\n     var iroute = require('iroute');\r\n\r\n##benchmark\r\n\r\nto run 1000 handler and match 10000 times,regexp match and iroute result is follow:\r\n\r\n      regexp: 1007ms\r\n      cb1 run times :10000\r\n      iroute: 251ms\r\n      cb2 run times :10000\r\n\r\nwow!!it's more than 3 times faster than regex match router.\r\n\r\n## example\r\n\r\n    var iroute = require('iroute')\r\n\r\n    iroute.add([\r\n\r\n      [\"get:/hello/world\",function(req,res){res.end('hello world')}],\r\n\r\n    ],function(req,res){\r\n\r\n        res.statusCode = 404;\r\n\r\n        res.end('404')\r\n\r\n    })\r\n\r\n    var http = require('http');\r\n\r\n    http.createServer(function (req, res) {\r\n\r\n      iroute.route(req,res);\r\n\r\n    }).listen(8124);\r\n\r\nthen request the 127.0.0.1:8124 you can see 'hello world'\r\n\r\n##API\r\n\r\niroute.add(routearray [,not_match_function]);\r\n\r\niroute.route(req,res); \r\nif iroute.route match the request,it will return 1,else return 0;\r\n\r\nroutearray:\r\n\r\n  [\r\n    [{method}:{url}?{key1}&{key2}, middle_function1, middle_function2, .., handle_function],\r\n    ...\r\n  ]\r\n\r\n  example:\r\n\r\n      [\r\n\r\n        [\"get:/hello/world/?key1&key2\", function middle1(req,res,ir_next){\r\n          req.ir_count = 0;\r\n          req.ir_count++;\r\n          ir_next()},\r\n        function middle2(req,res,ir_next){ req.ir_count++; process.nextTick(function(){ ir_next() }) },\r\n        function middle3(req,res,ir_next){ req.ir_count++; setTimeout(function(){ ir_next(); },2000) }, //Asynchronous is ok\r\n        function middle4(req,res,ir_next){ req.ir_count++; ir_next()},\r\n        function handle(req,res){\r\n          res.end( req.ir_count+''); //  req.ir_count will be 4!\r\n        }]\r\n\r\n      ]\r\n\r\nir_next([error]):\r\nif you don't call the function ir_next(),then will hang up the request,never responsed the rquest.so if you want to interrupt the routing, run the res.end() and never call the ir_next() or call the ir_next(\"some error\")  handle the request to the not_match_function;\r\nir_next() function has an optional param error,if ir_next(\"some error\");then will break the routing and call the not_match_function .it then setting the req.iroute_error = \"some error\";\r\n\r\nnot_match_function:\r\nif iroute not match the request,the not_match_function will be called.It has two parameters,req and res.\r\n\r\nsupport: get,post,put,delete,options,head,other (other include copy,trace,lock.. etc)\r\n\r\nmore example see /example/example.js\r\n\r\n##expressjs example\r\n\r\n      var express = require('express');\r\n      var app = express();\r\n      var iroute = require(\"iroute\");\r\n\r\n      var route_array = [\r\n        [\"get:/hello/world\",function(req,res){res.end('hello world')}],\r\n      ]\r\n\r\n      app.use(iroute.connect(route_array));\r\n\r\n      app.listen(3000);\r\n\r\n\r\n##benchmark to express and express+iroute\r\n\r\n      express only(1000 routes)\r\n      ab -c 100 -n 20000 http://192.168.28.5:8127/test/\r\n      Requests per second:    1271.83 [#/sec] (mean)\r\n\r\n      ab -c 500 -n 20000 http://192.168.28.5:8127/test/\r\n      Requests per second:    1237.43 [#/sec] (mean)\r\n\r\n      ab -c 800 -n 20000 http://192.168.28.5:8127/test/\r\n      Requests per second:    1191.17 [#/sec] (mean)\r\n\r\n\r\n\r\n      express+iroute (1000 routes)\r\n      ab -c 100 -n 20000 http://192.168.28.5:8128/test/\r\n      Requests per second:    1886.01 [#/sec] (mean)\r\n\r\n      ab -c 500 -n 20000 http://192.168.28.5:8128/test/\r\n      Requests per second:    1773.27 [#/sec] (mean)\r\n\r\n      ab -c 800 -n 20000 http://192.168.28.5:8128/test/\r\n      Requests per second:    1829.89 [#/sec] (mean)\r\n",
  "readmeFilename": "README.md",
  "gypfile": true,
  "_id": "iroute@0.3.2",
  "dist": {
    "shasum": "4953cb98885dd701899ea62e0119c798faea8452"
  },
  "_from": "iroute@*",
  "_resolved": "https://registry.npmjs.org/iroute/-/iroute-0.3.2.tgz"
}
